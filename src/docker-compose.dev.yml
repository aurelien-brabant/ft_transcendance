version: '3'

# We are keeping the postgres container separate so that only the nestjs container can reach to it.

networks:
  rproxy:
  backend:

services:

  # reverse proxy

  nginx-rproxy:
    image: nginx:1.21.5-alpine

    networks:
      - rproxy

    volumes:
      - ./rproxy.nginx.conf:/etc/nginx/nginx.conf

    ports:
      - 8080:80

    restart: unless-stopped

  # frontend

  nextjs-front:
    build:
      context: nextjs-front
      dockerfile: Dockerfile.dev

    networks:
      - rproxy

    volumes:
      - ./nextjs-front:/usr/app
     
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_FT_CLIENT_ID=30b33f3cd460d6aa6b4b8b25dd65d9ed457f2af783bd63d0a1c2c191f24b107d
      - NEXT_PUBLIC_FT_REDIRECT_URI=http://localhost:8080/validate-fortytwo

    ports:
      - 3000:3000

    restart: unless-stopped

  # backend

  nestjs-back:
    build:
      context: nestjs-back
      dockerfile: Dockerfile.dev

    networks:
      - rproxy
      - backend

    volumes:
      - ./nestjs-back:/usr/app
      - ./nestjs-back/avatars:/upload/avatars

    environment:
      - NODE_ENV=development
      - POSTGRES_USER=transcendance
      - POSTGRES_PASSWORD=transcendance
      - POSTGRES_HOST=postgres
      - JWT_SECRET=dummy_secret
      - JWT_LIFETIME=30s
      - FT_CLIENT_ID=30b33f3cd460d6aa6b4b8b25dd65d9ed457f2af783bd63d0a1c2c191f24b107d
      - FT_SECRET=9eee357285f683c0bd453957d2451b601d5add587cd593a6eb31907399724601
      - FT_REDIRECT_URI=http://localhost:8080/validate-fortytwo

    ports:
      - 6001:3000

    restart: unless-stopped

  postgres:
    image: postgres:14-alpine3.15

    networks:
      - backend

    volumes:
      - postgres-data:/var/lib/postgresql/data

    environment:
      - POSTGRES_USER=transcendance
      - POSTGRES_PASSWORD=transcendance

    restart: unless-stopped

volumes:
  postgres-data:
