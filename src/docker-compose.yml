# This is the compose file used in PRODUCTION.
# If you are a developper please use the DEVELOPMENT compose file instead.
# See README.md for more info.

version: '3'

# We are keeping the postgres container separate so that only the nestjs container can reach to it.

networks:
  rproxy:
  backend:

services:

  # reverse proxy

  nginx-rproxy:
    image: nginx:1.21.5-alpine

    networks:
      - rproxy

    volumes:
      - ./rproxy.nginx.conf:/etc/nginx/nginx.conf

    ports:
      - 80:80

  # frontend

  nextjs-front:
    build:
      context: nextjs-front
      dockerfile: Dockerfile

    networks:
      - rproxy

    environment:
      - NODE_ENV=production

  # backend

  nestjs-back:
    build:
      context: nestjs-back
      dockerfile: Dockerfile

    networks:
      - rproxy
      - backend

    environment:
      - NODE_ENV=production
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=postgres # no need to put that in the .env as it depends on the service name

  postgres:
    image: postgres:14-alpine3.15

    networks:
      - backend

    volumes:
      - postgres-data:/var/lib/postgresql/data

    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

volumes:
  postgres-data:
